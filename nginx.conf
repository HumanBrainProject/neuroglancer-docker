user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;

    keepalive_timeout  65;

    gzip on;

    server {
        listen       80;
        server_name  localhost;

        gzip_static always;
        # All browsers that are compatible with Neuroglancer support gzip encoding
        gunzip      off;

        location / {
            root   /neuroglancer;
            index  index.html;
        }

        location /precomputed {
            root   /;

            # Allow instances of Neuroglancer hosted on other servers to use
            # the pre-computed data
            add_header 'Access-Control-Allow-Origin' '*';

            # Info files can be stored as info.json, this way the correct MIME
            # type is sent (same for other JSON files, such as meshes). This is
            # deactivated because nginx does not find pre-compressed gzip files
            # when this is enabled (error 404 is returned) (nginx bug?).
            #
            #try_files $uri $uri.json =404;

            location ~ ^(.*)/([0-9]+-[0-9]+)_([0-9]+-[0-9]+)_([0-9]+-[0-9]+)$ {
                # Chunks are stored in per-axis sub-directories to prevent
                # having too many files in a single directory
                alias $1/$2/$3/$4;
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
